[
  {
    "objectID": "index.html#selamat-datang-di-jupyter-book-saya",
    "href": "index.html#selamat-datang-di-jupyter-book-saya",
    "title": "Pencarian dan Penambangan Web",
    "section": "Selamat Datang di Jupyter Book Saya",
    "text": "Selamat Datang di Jupyter Book Saya\nSelamat Datang di Quarto Book Saya Website ini menyajikan beragam konten terkait Penambangan Data atau Data Mining. Mulai dari tugas, materi, hingga artikel-artikel menarik yang mencakup dua tema utama: Pencarian Penambangan informasi melalui Web dan teknik-teknik penambangan data yang relevan. Jelajahi menu di samping untuk menemukan lebih banyak wawasan dan praktik terkait, serta kunjungi Website Personal(https://adamzakys.github.io/) untuk mengetahui biodata saya secara lebih rinci. Selamat menikmati pembelajaran dan penjelajahan!"
  },
  {
    "objectID": "Crawling_berita_Kompas.html#menginstall-dan-mengimport-library-yang-dibutuhkan",
    "href": "Crawling_berita_Kompas.html#menginstall-dan-mengimport-library-yang-dibutuhkan",
    "title": "1  Tugas Crawling_berita_Kompas",
    "section": "1.1 Menginstall dan mengimport library yang dibutuhkan",
    "text": "1.1 Menginstall dan mengimport library yang dibutuhkan\nLibraries yang Digunakan * BeautifulSoup (bs4): Library untuk melakukan web scraping dan ekstraksi data HTML. * Requests: Library untuk membuat permintaan HTTP ke situs web dan mendapatkan konten halaman. * Pandas (pd): Library untuk mengelola dan menyimpan data dalam format CSV.\n\nfrom bs4 import BeautifulSoup as soup\nimport requests\nimport pandas as pd\nimport nltk\nfrom nltk.tokenize import sent_tokenize\nimport re\nfrom nltk.corpus import stopwords\nfrom sklearn.feature_extraction.text import TfidfVectorizer,CountVectorizer, TfidfTransformer\nfrom sklearn.metrics.pairwise import cosine_similarity\nimport networkx as nx\nimport matplotlib.pyplot as plt\n\n\nnltk.download(\"punkt\")\nnltk.download(\"stopwords\")\n\n[nltk_data] Downloading package punkt to /root/nltk_data...\n[nltk_data]   Package punkt is already up-to-date!\n[nltk_data] Downloading package stopwords to /root/nltk_data...\n[nltk_data]   Package stopwords is already up-to-date!\n\n\nTrue"
  },
  {
    "objectID": "Crawling_berita_Kompas.html#web-scraping-berita-kompas-dan-penyimpanan-ke-google-drive",
    "href": "Crawling_berita_Kompas.html#web-scraping-berita-kompas-dan-penyimpanan-ke-google-drive",
    "title": "1  Tugas Crawling_berita_Kompas",
    "section": "1.2 Web Scraping Berita Kompas dan Penyimpanan ke Google Drive",
    "text": "1.2 Web Scraping Berita Kompas dan Penyimpanan ke Google Drive\nKode ini menggunakan teknik web scraping untuk mengumpulkan judul dan isi berita dari 200 halaman indeks situs Kompas.com. Berikut adalah penjelasan komponen utama dari kode tersebut:\nProses Web Scraping dan menyimpan data * Iterasi sebanyak 5 (karna yang akan dipreprocessing kali ini cuman 1 berita) halaman indeks(tergantung indeks pada website) di situs Kompas.com. * Untuk setiap halaman, melakukan permintaan HTTP dan mendapatkan konten HTML. * Menggunakan BeautifulSoup untuk mengekstrak daftar berita dari halaman tersebut. * Untuk setiap berita, mengakses halaman individu untuk mengambil judul dan isi berita. * Data judul dan isi berita ditambahkan ke dalam dictionary csv. Penyimpanan Data * Setelah proses scraping selesai, data disimpan dalam file CSV dengan nama “Data_BeritaKompas.csv” terlebih dahulu di environment Colab. * File CSV tersebut disalin ke dalam Google Drive pada path “/content/drive/My Drive/Penambangan WEB/Data/”.\n\nfrom google.colab import drive\ndrive.mount('/content/drive')\n\ncsv = {\"Judul\": [], \"Berita\": []}\n\nfor i in range(1, 5):\n    url = \"https://indeks.kompas.com/?page={}\".format(i)\n    client = requests.get(url)\n    page_html = client.content\n    page_soup = soup(page_html, \"html.parser\")\n    berita = page_soup.findAll(\"div\", {\"class\": \"latest--indeks mt2 clearfix\"})\n\n    for h in berita:\n        r = requests.get(h.select_one('a.article__link')['href'])\n        page = soup(r.content, \"html.parser\")\n        halaman_isi = page.select_one(\"div\", {\"class\": \"col-bs10-10\"})\n\n        judul_berita = halaman_isi.select(\"h1\", {\"class\": \"read__title\"})\n        judul = judul_berita[0].text\n\n        isi_berita = halaman_isi.findAll('p')\n        isi = '\\n'.join([p.get_text() for p in isi_berita])\n\n        csv[\"Judul\"].append(judul)\n        csv[\"Berita\"].append(isi)\n\n        data = pd.DataFrame(csv)\n        csv_path_drive = '/content/drive/My Drive/Penambangan WEB/Data/Data_BeritaKompas.csv'\n        data.to_csv(csv_path_drive, index=False)\n\nDrive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True)."
  },
  {
    "objectID": "Crawling_berita_Kompas.html#import-dan-membaca-data-csv",
    "href": "Crawling_berita_Kompas.html#import-dan-membaca-data-csv",
    "title": "1  Tugas Crawling_berita_Kompas",
    "section": "1.3 Import dan Membaca Data CSV",
    "text": "1.3 Import dan Membaca Data CSV\nMenggunakan Pandas untuk membaca file CSV yang telah disimpan sebelumnya. File CSV tersebut berisi data judul dan isi berita dari Kompas.com yang telah di-web scrape sebelumnya, lalu menampilkan data yang telah dibaca dari file CSV dalam bentuk DataFrame untuk dapat dianalisis lebih lanjut.\n\nfrom google.colab import drive\ndrive.mount('/content/drive')\nfile_path = \"/content/drive/My Drive/Penambangan WEB/Data/Data_BeritaKompas.csv\"\ndf = pd.read_csv(file_path)\ndf\n\nDrive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n\n\n\n  \n    \n\n\n\n\n\n\nJudul\nBerita\n\n\n\n\n0\nChris Martin Singgung Kemacetan Jakarta\nChris Martin Singgung Kemacetan Jakarta\\nTim R...\n\n\n1\nPulihkan Nama Baik Mahasiswa yang Dituduh Laku...\nPulihkan Nama Baik Mahasiswa yang Dituduh Laku...\n\n\n2\nPeritel: Waspada, Kenaikan Harga Gula Bisa Bik...\nPeritel: Waspada, Kenaikan Harga Gula Bisa Bik...\n\n\n3\nKPK: OTT di Bondowoso Terkait Pengurusan Perka...\nKPK: OTT di Bondowoso Terkait Pengurusan Perka..."
  },
  {
    "objectID": "Crawling_berita_Kompas.html#mengambil-salah-satu-berita-untuk-menjadi-sampel-data-yang-akan-dianalisis",
    "href": "Crawling_berita_Kompas.html#mengambil-salah-satu-berita-untuk-menjadi-sampel-data-yang-akan-dianalisis",
    "title": "1  Tugas Crawling_berita_Kompas",
    "section": "1.4 Mengambil salah satu berita untuk menjadi sampel data yang akan dianalisis",
    "text": "1.4 Mengambil salah satu berita untuk menjadi sampel data yang akan dianalisis\n\nBerita = df['Berita'].iloc[0]\nBerita\n\n'Chris Martin Singgung Kemacetan Jakarta\\nTim Redaksi\\nJAKARTA, KOMPAS.com - Band Coldplay ikut merasakan kemacetan Kota Jakarta saat pertama kali ke Indonesia. \\nMomen itu diungkap sang vokalis Chris Martin di panggung konser Music of the Spheres World Tour di Stadion Utama Gelora Bung Karno (SUGBK) Senayan, Jakarta, Rabu (15/11/2023).\\n\"Lalu lintas di Jakarta sangat gila. Macet dan saya rasa itu sial sekali. Menyebalkan. Kalian tidak sendirian, saya juga merasakannya,\" kata Chris Martin. \\nMeski begitu, Chris Martin tetap bahagia bisa tampil perdana di hadapan 80.000 penggemarnya di Jakarta. \\nBaca juga: Julian Jacob dan Mirriam Eka Titipkan Anaknya ke Orangtua demi Nonton Konser Coldplay\\nKOMPAS.com/RODERICK ADRIAN Antusiasme penggemar Coldplay saat menonton konser Music of the Spheres World Tour, di Stadion Utama Gelora Bung Karno, Jakarta, Rabu (15/11/2023). Dalam penampilannya Coldplay membawakan sejumlah lagu hits mereka seperti Higher Power, Paradise, Viva La Vida, hingga Everglow.\"Terima kasih kalian semua sudah meramaikan show besar ini. Terima kasih untuk Rahmania Astrini yang sudah membuka acara. Kalian semuanya, kru, pengayuh sepeda, dan semuanya yang sudah memberikan energi,\" ucap Chris. \\nChris Martin juga menyampaikan ucapan terima kasih kepada penonton dan mengaku senang bisa tampil pertama kali di Indonesia. \\n\"Terima kasih banyak sudah datang ke sini. Kami sangat senang bisa tampil pertama kali di Indonesia. Kami juga berterima kasih kepada Pemerintah yang sudah memberikan kami kesempatan untuk manggung di sini,\" kata Chris Martin.\\nBaca juga: Momen-momen Seru di Konser Coldplay di Jakarta\\nKOMPAS.com/RODERICK ADRIAN Vokalis Coldplay Chris Martin beraksi dalam konser Music of the Spheres World Tour, di Stadion Utama Gelora Bung Karno, Jakarta, Rabu (15/11/2023). Dalam penampilannya Coldplay membawakan sejumlah lagu hits mereka seperti Higher Power, Paradise, Viva La Vida, hingga Everglow.\"Kami sangat mencintai kalian semua. Kalau bisa saya ingin memeluk kalian satu per satu. Terima kasih banyak, banyak cinta untuk kalian,\" lanjutnya. \\nBahkan, setelah menyanyikan \"Hymn For The Weekend\", vokalis berusia 46 tahun itu berkelakar ingin manggung di Jakarta setiap minggu. \\n\"Kalian sangat luar biasa. Saya sangat senang di sini. Kalau boleh saya bisa manggung setiap minggu di sini,\" ujar Chris Martin. \\nDalam konser tersebut Coldplay membawakan deretan lagu hitsnya, yaitu, \"Higher Power\", \"Adventure Of A Lifetime\", \"Paradise\", \"The Scientist\", \"Viva La Vida\", \"Everglow\", \"In My Place\", \"Yellow\", \"Boys Don\\'t Cry\", \"Something Just Like This\" hingga \"My Universe\".\\nBaca juga: BERITA FOTO: Keseruan Konser Coldplay di GBK\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nDapatkan informasi dan insight pilihan redaksi Kompas.com'"
  },
  {
    "objectID": "Crawling_berita_Kompas.html#pra-pemrosesan-teks-preprocessing",
    "href": "Crawling_berita_Kompas.html#pra-pemrosesan-teks-preprocessing",
    "title": "1  Tugas Crawling_berita_Kompas",
    "section": "1.5 Pra-pemrosesan Teks / Preprocessing",
    "text": "1.5 Pra-pemrosesan Teks / Preprocessing\nMengambil teks sebagai input dan melakukan beberapa langkah pra-pemrosesan pada teks dalam bahasa Indonesia. Langkah-langkah tersebut mencakup penghapusan angka, pembersihan karakter khusus, konversi teks ke huruf kecil, penghapusan kata-kata umum (stopwords), dan penggabungan kata-kata yang telah melalui proses sebelumnya. Tujuannya adalah membersihkan dan mempersiapkan teks agar dapat digunakan lebih lanjut dalam analisis atau pemrosesan lanjutan.\n\ndef preprocessing(text):\n    text = re.sub(r'\\d+', '', text)\n    text = re.sub(r'[^\\w\\s.]', '', text)\n    text = text.lower()\n\n    stop_words = set(stopwords.words('indonesian'))\n    words = text.split()\n    filtered_words = [word for word in words if word.lower() not in stop_words]\n\n    preprocessing_text = ' '.join(filtered_words)\n\n    return preprocessing_text\n\nkalimat_preprocessing = preprocessing(Berita)\n\nkalimat = nltk.sent_tokenize(Berita)\nkalimat_preprocessing = nltk.sent_tokenize(kalimat_preprocessing)"
  },
  {
    "objectID": "Crawling_berita_Kompas.html#metode-pengukuran-tf-idf",
    "href": "Crawling_berita_Kompas.html#metode-pengukuran-tf-idf",
    "title": "1  Tugas Crawling_berita_Kompas",
    "section": "1.6 Metode pengukuran TF-IDF",
    "text": "1.6 Metode pengukuran TF-IDF\nMengonversi teks yang sudah melewati tahap pra-pemrosesan menjadi representasi matriks numerik menggunakan skema TF-IDF. Matriks ini mencerminkan bobot TF-IDF dari setiap kata dalam setiap kalimat. Setelah transformasi, DataFrame pandas dibuat untuk menyajikan matriks tersebut dengan kata-kata sebagai kolom dan setiap baris mewakili satu kalimat, menunjukkan bobot TF-IDF dari kata-kata tersebut dalam kalimat tersebut.\n\ntfidf_vectorizer = TfidfVectorizer()\ntfidf_matrix_preprocessing = tfidf_vectorizer.fit_transform(kalimat_preprocessing)\n\nterms = tfidf_vectorizer.get_feature_names_out()\ntfidf_preprocessing = pd.DataFrame(data=tfidf_matrix_preprocessing.toarray(), columns=terms)\n\ntfidf_preprocessing\n\n\n  \n    \n\n\n\n\n\n\nacara\nadrian\nadventure\nanaknya\nantusiasme\nastrini\nbaca\nbahagia\nband\nberaksi\n...\ntour\nucapan\nuniverse\nutama\nvida\nviva\nvokalis\nweekend\nworld\nyellow\n\n\n\n\n0\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.243498\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n1\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.208049\n0.000000\n0.000000\n0.208049\n0.000000\n0.000000\n0.208049\n0.000000\n0.208049\n0.000000\n\n\n2\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n3\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n4\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n5\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n6\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.482375\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n7\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n8\n0.00000\n0.179230\n0.000000\n0.201959\n0.201959\n0.00000\n0.163103\n0.000000\n0.000000\n0.000000\n...\n0.163103\n0.000000\n0.000000\n0.163103\n0.000000\n0.000000\n0.000000\n0.000000\n0.163103\n0.000000\n\n\n9\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.235781\n0.235781\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n10\n0.45136\n0.000000\n0.000000\n0.000000\n0.000000\n0.45136\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n11\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n12\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.373642\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n13\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n14\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n15\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n16\n0.00000\n0.203862\n0.000000\n0.000000\n0.000000\n0.00000\n0.185519\n0.000000\n0.000000\n0.229716\n...\n0.185519\n0.000000\n0.000000\n0.185519\n0.000000\n0.000000\n0.185519\n0.000000\n0.185519\n0.000000\n\n\n17\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.245477\n0.245477\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n18\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n19\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n20\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.269898\n0.334196\n0.000000\n0.000000\n\n\n21\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n22\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n23\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n24\n0.00000\n0.000000\n0.189761\n0.000000\n0.000000\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.189761\n0.000000\n0.153251\n0.153251\n0.000000\n0.000000\n0.000000\n0.189761\n\n\n25\n0.00000\n0.000000\n0.000000\n0.000000\n0.000000\n0.00000\n0.236662\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n\n\n\n26 rows × 136 columns"
  },
  {
    "objectID": "Crawling_berita_Kompas.html#perhitungan-kemiripan-kosinus",
    "href": "Crawling_berita_Kompas.html#perhitungan-kemiripan-kosinus",
    "title": "1  Tugas Crawling_berita_Kompas",
    "section": "1.7 Perhitungan Kemiripan Kosinus",
    "text": "1.7 Perhitungan Kemiripan Kosinus\nMenghitung kemiripan kosinus antara semua pasangan kalimat menggunakan matriks TF-IDF yang telah dihasilkan sebelumnya. Kemudian, hasil kemiripan kosinus tersebut disimpan dalam DataFrame untuk kemudahan analisis.\nRumus Perhitungan Kemiripan Kosinus: * Untuk dua vektor A dan B, kemiripan kosinus dihitung dengan rumus \\[ \\text{Similarity}(A, B) = \\frac{{A \\cdot B}}{{\\|A\\| \\cdot \\|B\\|}} \\]\n\nDi sini, ⋅ adalah operasi perkalian dot (dot product), dan ∥∥ adalah norma Euclidean. Dalam konteks ini, vektor A dan B adalah vektor representasi TF-IDF dari dua kalimat. Hasilnya adalah skalar yang menunjukkan seberapa mirip dua kalimat tersebut, dengan nilai 1 menunjukkan kemiripan sempurna.\n\n\ncosine_sim_preprocessing = cosine_similarity(tfidf_matrix_preprocessing, tfidf_matrix_preprocessing)\ncosine_sim_df = pd.DataFrame(cosine_sim_preprocessing, columns=range(len(kalimat_preprocessing)), index=range(len(kalimat_preprocessing)))\ncosine_sim_df\n\n\n  \n    \n\n\n\n\n\n\n0\n1\n2\n3\n4\n5\n6\n7\n8\n9\n...\n16\n17\n18\n19\n20\n21\n22\n23\n24\n25\n\n\n\n\n0\n1.000000\n0.111710\n0.179270\n0.0\n0.0\n0.122519\n0.075810\n0.235482\n0.120405\n0.026906\n...\n0.236566\n0.028012\n0.0\n0.000000\n0.092397\n0.0\n0.000000\n0.108834\n0.017488\n0.179077\n\n\n1\n0.111710\n1.000000\n0.063221\n0.0\n0.0\n0.129621\n0.080204\n0.083044\n0.429423\n0.000000\n...\n0.587631\n0.000000\n0.0\n0.000000\n0.130328\n0.0\n0.000000\n0.115143\n0.074414\n0.036470\n\n\n2\n0.179270\n0.063221\n1.000000\n0.0\n0.0\n0.000000\n0.000000\n0.209022\n0.049563\n0.000000\n...\n0.112749\n0.000000\n0.0\n0.000000\n0.082015\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n3\n0.000000\n0.000000\n0.000000\n1.0\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.0\n0.000000\n0.000000\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n4\n0.000000\n0.000000\n0.000000\n0.0\n1.0\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.0\n0.000000\n0.000000\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n5\n0.122519\n0.129621\n0.000000\n0.0\n0.0\n1.000000\n0.242712\n0.000000\n0.000000\n0.000000\n...\n0.115584\n0.000000\n0.0\n0.000000\n0.000000\n0.0\n0.000000\n0.348442\n0.000000\n0.000000\n\n\n6\n0.075810\n0.080204\n0.000000\n0.0\n0.0\n0.242712\n1.000000\n0.000000\n0.000000\n0.000000\n...\n0.071519\n0.000000\n0.0\n0.000000\n0.000000\n0.0\n0.000000\n0.215603\n0.000000\n0.000000\n\n\n7\n0.235482\n0.083044\n0.209022\n0.0\n0.0\n0.000000\n0.000000\n1.000000\n0.065103\n0.000000\n...\n0.148102\n0.000000\n0.0\n0.000000\n0.107731\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n8\n0.120405\n0.429423\n0.049563\n0.0\n0.0\n0.000000\n0.000000\n0.065103\n1.000000\n0.044632\n...\n0.644671\n0.046467\n0.0\n0.000000\n0.058152\n0.0\n0.000000\n0.000000\n0.105862\n0.173488\n\n\n9\n0.026906\n0.000000\n0.000000\n0.0\n0.0\n0.000000\n0.000000\n0.000000\n0.044632\n1.000000\n...\n0.050766\n0.694276\n0.0\n0.155534\n0.000000\n0.0\n0.000000\n0.000000\n0.346171\n0.032380\n\n\n10\n0.000000\n0.000000\n0.000000\n0.0\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n0.119726\n...\n0.000000\n0.000000\n0.0\n0.240457\n0.000000\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n11\n0.035919\n0.038001\n0.000000\n0.0\n0.0\n0.114998\n0.071156\n0.000000\n0.000000\n0.000000\n...\n0.033886\n0.000000\n0.0\n0.000000\n0.000000\n0.0\n0.000000\n0.102153\n0.000000\n0.000000\n\n\n12\n0.177402\n0.062125\n0.000000\n0.0\n0.0\n0.188002\n0.233883\n0.000000\n0.000000\n0.099111\n...\n0.055398\n0.000000\n0.0\n0.199054\n0.000000\n0.0\n0.203096\n0.167004\n0.000000\n0.000000\n\n\n13\n0.000000\n0.000000\n0.000000\n0.0\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n0.203673\n...\n0.000000\n0.000000\n0.0\n0.409058\n0.000000\n0.0\n0.503977\n0.000000\n0.000000\n0.000000\n\n\n14\n0.196650\n0.000000\n0.000000\n0.0\n0.0\n0.000000\n0.194784\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.0\n0.000000\n0.000000\n0.0\n0.336525\n0.000000\n0.000000\n0.000000\n\n\n15\n0.072315\n0.076507\n0.000000\n0.0\n0.0\n0.231523\n0.143257\n0.000000\n0.000000\n0.057155\n...\n0.068222\n0.000000\n0.0\n0.114789\n0.100296\n0.0\n0.000000\n0.413492\n0.000000\n0.000000\n\n\n16\n0.236566\n0.587631\n0.112749\n0.0\n0.0\n0.115584\n0.071519\n0.148102\n0.644671\n0.050766\n...\n1.000000\n0.052854\n0.0\n0.000000\n0.145271\n0.0\n0.000000\n0.102674\n0.120411\n0.197332\n\n\n17\n0.028012\n0.000000\n0.000000\n0.0\n0.0\n0.000000\n0.000000\n0.000000\n0.046467\n0.694276\n...\n0.052854\n1.000000\n0.0\n0.000000\n0.000000\n0.0\n0.000000\n0.000000\n0.360408\n0.033712\n\n\n18\n0.000000\n0.000000\n0.000000\n0.0\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n1.0\n0.000000\n0.000000\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n19\n0.000000\n0.000000\n0.000000\n0.0\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n0.155534\n...\n0.000000\n0.000000\n0.0\n1.000000\n0.000000\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n20\n0.092397\n0.130328\n0.082015\n0.0\n0.0\n0.000000\n0.000000\n0.107731\n0.058152\n0.000000\n...\n0.145271\n0.000000\n0.0\n0.000000\n1.000000\n0.0\n0.000000\n0.333216\n0.030637\n0.000000\n\n\n21\n0.000000\n0.000000\n0.000000\n0.0\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.0\n0.000000\n0.000000\n1.0\n0.000000\n0.000000\n0.000000\n0.000000\n\n\n22\n0.000000\n0.000000\n0.000000\n0.0\n0.0\n0.000000\n0.000000\n0.000000\n0.000000\n0.000000\n...\n0.000000\n0.000000\n0.0\n0.000000\n0.000000\n0.0\n1.000000\n0.000000\n0.000000\n0.000000\n\n\n23\n0.108834\n0.115143\n0.000000\n0.0\n0.0\n0.348442\n0.215603\n0.000000\n0.000000\n0.000000\n...\n0.102674\n0.000000\n0.0\n0.000000\n0.333216\n0.0\n0.000000\n1.000000\n0.000000\n0.000000\n\n\n24\n0.017488\n0.074414\n0.000000\n0.0\n0.0\n0.000000\n0.000000\n0.000000\n0.105862\n0.346171\n...\n0.120411\n0.360408\n0.0\n0.000000\n0.030637\n0.0\n0.000000\n0.000000\n1.000000\n0.047911\n\n\n25\n0.179077\n0.036470\n0.000000\n0.0\n0.0\n0.000000\n0.000000\n0.000000\n0.173488\n0.032380\n...\n0.197332\n0.033712\n0.0\n0.000000\n0.000000\n0.0\n0.000000\n0.000000\n0.047911\n1.000000\n\n\n\n\n\n26 rows × 26 columns"
  },
  {
    "objectID": "Crawling_berita_Kompas.html#visualisasi-hubungan-antar-kalimat-menggunakan-graf-graph-berdasarkan-cosine-similarity",
    "href": "Crawling_berita_Kompas.html#visualisasi-hubungan-antar-kalimat-menggunakan-graf-graph-berdasarkan-cosine-similarity",
    "title": "1  Tugas Crawling_berita_Kompas",
    "section": "1.8 Visualisasi Hubungan Antar Kalimat Menggunakan Graf (Graph) berdasarkan Cosine Similarity",
    "text": "1.8 Visualisasi Hubungan Antar Kalimat Menggunakan Graf (Graph) berdasarkan Cosine Similarity\nMembuat graf yang merepresentasikan hubungan antara kalimat-kalimat berdasarkan nilai cosine similarity. Setiap kalimat direpresentasikan sebagai node, dan garis yang menghubungkan dua node menunjukkan tingkat kemiripan antara kalimat tersebut. Semakin panjang dan tebal garis, semakin tinggi tingkat kemiripan antara dua kalimat. Graf ini membantu memvisualisasikan struktur hubungan antar kalimat dalam teks.\n\nG_preprocessing = nx.Graph()\n\nfor i in range(len(cosine_sim_preprocessing)):\n    G_preprocessing.add_node(i)\n\nfor i in range(len(cosine_sim_preprocessing)):\n    for j in range(len(cosine_sim_preprocessing)):\n        similarity = cosine_sim_preprocessing[i][j]\n        if similarity &gt; 0.1 and i != j:\n            G_preprocessing.add_edge(i, j, weight=similarity)\n\npos = nx.circular_layout(G_preprocessing)\n\nlabels = {i: f'K {i}' for i in G_preprocessing.nodes()}\n\nedge_labels = {(i, j): round(data['weight'], 2) for i, j, data in G_preprocessing.edges(data=True)}\n\nnode_size = 800\n\nnode_color = 'salmon'\nedge_color = 'gray'\n\nplt.figure(figsize=(7, 7))\nnx.draw(G_preprocessing, pos, with_labels=True, labels=labels, node_size=node_size, node_color=node_color, edge_color=edge_color)\nnx.draw_networkx_edge_labels(G_preprocessing, pos, edge_labels=edge_labels)\nplt.show()"
  },
  {
    "objectID": "Crawling_berita_Kompas.html#closeness",
    "href": "Crawling_berita_Kompas.html#closeness",
    "title": "1  Tugas Crawling_berita_Kompas",
    "section": "1.9 Closeness",
    "text": "1.9 Closeness\nMenghitung dan menganalisis Closeness Centrality pada graf G_preprocessing. Rumus Perhitungan Closeness Centrality:\n\n# Menghitung closeness centrality\ncloseness_centrality_preprocessing = nx.closeness_centrality(G_preprocessing)\n\n# Membuat DataFrame dari nilai Closeness Centrality\ncentrality_df_preprocessing = pd.DataFrame(closeness_centrality_preprocessing.items(), columns=['Node', 'Closeness Centrality Preprocessing'])\n\n# Mengurutkan DataFrame berdasarkan Closeness Centrality dari yang terbesar\ncentrality_df_sorted_preprocessing = centrality_df_preprocessing.sort_values(by='Closeness Centrality Preprocessing', ascending=False)\n\n# Menampilkan tabel Closeness Centrality yang telah diurutkan\ncentrality_df_sorted_preprocessing\n\n\n  \n    \n\n\n\n\n\n\nNode\nCloseness Centrality Preprocessing\n\n\n\n\n0\n0\n0.518824\n\n\n12\n12\n0.518824\n\n\n23\n23\n0.504000\n\n\n16\n16\n0.490000\n\n\n5\n5\n0.490000\n\n\n15\n15\n0.441000\n\n\n20\n20\n0.420000\n\n\n1\n1\n0.420000\n\n\n13\n13\n0.410233\n\n\n19\n19\n0.400909\n\n\n24\n24\n0.400909\n\n\n8\n8\n0.400909\n\n\n14\n14\n0.400909\n\n\n6\n6\n0.392000\n\n\n7\n7\n0.383478\n\n\n10\n10\n0.383478\n\n\n25\n25\n0.367500\n\n\n2\n2\n0.367500\n\n\n22\n22\n0.360000\n\n\n9\n9\n0.360000\n\n\n11\n11\n0.326667\n\n\n17\n17\n0.309474\n\n\n3\n3\n0.000000\n\n\n21\n21\n0.000000\n\n\n18\n18\n0.000000\n\n\n4\n4\n0.000000\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n1.9.1 Hasil penggunaan Closeness\n\n# Mengambil tiga baris teratas dari DataFrame yang sudah diurutkan\ntop_three_closeness_preprocessing = centrality_df_sorted_preprocessing.head(3)\n\n# Mendapatkan indeks node dari tiga baris teratas\ntop_node_indices_preprocessing = top_three_closeness_preprocessing['Node']\n\n# Menampilkan kalimat yang sesuai dengan node-node teratas\nfor node_index in top_node_indices_preprocessing:\n    print(f\"Node Node Preprocessing {node_index}: {kalimat[node_index]}\")\n\nNode Node Preprocessing 0: Chris Martin Singgung Kemacetan Jakarta\nTim Redaksi\nJAKARTA, KOMPAS.com - Band Coldplay ikut merasakan kemacetan Kota Jakarta saat pertama kali ke Indonesia.\nNode Node Preprocessing 12: Chris Martin juga menyampaikan ucapan terima kasih kepada penonton dan mengaku senang bisa tampil pertama kali di Indonesia.\nNode Node Preprocessing 23: Saya sangat senang di sini."
  },
  {
    "objectID": "Crawling_berita_Kompas.html#menghitung-peringkat-halaman-dengan-pagerank",
    "href": "Crawling_berita_Kompas.html#menghitung-peringkat-halaman-dengan-pagerank",
    "title": "1  Tugas Crawling_berita_Kompas",
    "section": "1.10 Menghitung peringkat halaman dengan Pagerank",
    "text": "1.10 Menghitung peringkat halaman dengan Pagerank\nRumus Perhitungan Manual PageRank:\n\nPageRank mengukur pentingnya suatu node dalam sebuah graf berdasarkan seberapa banyak node lain yang mengarah ke node tersebut. Rumusnya adalah sebagai berikut: \\[PR(x) = (1 - d) + d \\left( \\frac{{L(y)}}{{PR(y)}} \\right)\\]\nPR(x) adalah PageRank dari node x.\nd adalah faktor damping, biasanya diatur sebagai 0,85.\nPR(y) adalah PageRank dari node yang memiliki tautan ke node y.\nL(y) adalah jumlah tautan keluar dari node y.\nIterasi dilakukan hingga konvergensi atau sejumlah iterasi tertentu. Semakin tinggi nilai PageRank, semakin “penting” node tersebut dalam graf.\n\n\n# Menghitung closeness centrality\npagerank_preprocessing = nx.pagerank(G_preprocessing)\n\n# Membuat DataFrame dari nilai Closeness Centrality\npagerank_df_preprocessing = pd.DataFrame(pagerank_preprocessing.items(), columns=['Node', 'Page Rank Preprocessing'])\n\n# Mengurutkan DataFrame berdasarkan Closeness Centrality dari yang terbesar\npagerank_df_sorted_preprocessing = pagerank_df_preprocessing.sort_values(by='Page Rank Preprocessing', ascending=False)\n\n# Menampilkan tabel Closeness Centrality yang telah diurutkan\npagerank_df_sorted_preprocessing\n\n\n  \n    \n\n\n\n\n\n\nNode\nPage Rank Preprocessing\n\n\n\n\n16\n16\n0.080798\n\n\n12\n12\n0.075970\n\n\n23\n23\n0.065561\n\n\n13\n13\n0.060866\n\n\n0\n0\n0.058958\n\n\n9\n9\n0.053334\n\n\n5\n5\n0.052513\n\n\n1\n1\n0.050648\n\n\n8\n8\n0.050344\n\n\n15\n15\n0.045809\n\n\n14\n14\n0.044665\n\n\n19\n19\n0.039017\n\n\n17\n17\n0.038757\n\n\n6\n6\n0.036289\n\n\n22\n22\n0.035917\n\n\n24\n24\n0.034727\n\n\n20\n20\n0.031017\n\n\n10\n10\n0.030352\n\n\n7\n7\n0.029462\n\n\n2\n2\n0.022710\n\n\n25\n25\n0.022676\n\n\n11\n11\n0.013060\n\n\n4\n4\n0.006637\n\n\n3\n3\n0.006637\n\n\n18\n18\n0.006637\n\n\n21\n21\n0.006637\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n1.10.1 Hasil Pagerank\n\n# Mengambil tiga baris teratas dari DataFrame yang sudah diurutkan\ntop_three_pagerank_preprocessing = pagerank_df_sorted_preprocessing.head(3)\n\n# Mendapatkan indeks node dari tiga baris teratas\ntop_node_indices = top_three_pagerank_preprocessing['Node']\n\n# Menampilkan kalimat yang sesuai dengan node-node teratas\nfor node_index in top_node_indices:\n    print(f\"Node {node_index}: {kalimat[node_index]}\")\n\nNode 16: Baca juga: Momen-momen Seru di Konser Coldplay di Jakarta\nKOMPAS.com/RODERICK ADRIAN Vokalis Coldplay Chris Martin beraksi dalam konser Music of the Spheres World Tour, di Stadion Utama Gelora Bung Karno, Jakarta, Rabu (15/11/2023).\nNode 12: Chris Martin juga menyampaikan ucapan terima kasih kepada penonton dan mengaku senang bisa tampil pertama kali di Indonesia.\nNode 23: Saya sangat senang di sini."
  },
  {
    "objectID": "Crawling_berita_Kompas.html#menggunakan-metode-eigenvector-centrality-untuk-menghitung-sentralitas-eigenvector-pada-graf",
    "href": "Crawling_berita_Kompas.html#menggunakan-metode-eigenvector-centrality-untuk-menghitung-sentralitas-eigenvector-pada-graf",
    "title": "1  Tugas Crawling_berita_Kompas",
    "section": "1.11 menggunakan metode eigenvector centrality untuk menghitung sentralitas eigenvector pada graf",
    "text": "1.11 menggunakan metode eigenvector centrality untuk menghitung sentralitas eigenvector pada graf\nRumus Perhitungan Manual Eigenvector Centrality: * Eigenvector Centrality mengukur pentingnya suatu node dalam suatu graf berdasarkan pada seberapa banyak node lain yang terhubung ke node tersebut. Rumusnya adalah sebagai berikut: \\[x_i = \\frac{1}{\\lambda} \\sum_{j=1}^{n} A_{ij} x_j\\]\n\nxi adalah eigenvector centrality dari node i\nAij adalah elemen matriks ketetanggaan yang menunjukkan apakah ada tautan antara node i dan j\nλ adalah nilai eigen (eigenvalue) yang sesuai dengan eigenvector yang dicari.\nIterasi dilakukan hingga konvergensi atau sejumlah iterasi tertentu. Semakin tinggi nilai eigenvector centrality, semakin “penting” node tersebut dalam graf.\n\n\n# Menghitung closeness centrality\neigenvector_preprocessing = nx.eigenvector_centrality(G_preprocessing)\n# Membuat DataFrame dari nilai Closeness Centrality\neigenvector_df_preprocessing = pd.DataFrame(eigenvector_preprocessing.items(), columns=['Node', 'Eigen Vector Preprocessing'])\n# Mengurutkan DataFrame berdasarkan Closeness Centrality dari yang terbesar\neigenvector_df_sorted_preprocessing = eigenvector_df_preprocessing.sort_values(by='Eigen Vector Preprocessing', ascending=False)\n# Menampilkan tabel Closeness Centrality yang telah diurutkan\neigenvector_df_sorted_preprocessing\n\n\n  \n    \n\n\n\n\n\n\nNode\nEigen Vector Preprocessing\n\n\n\n\n23\n23\n3.597098e-01\n\n\n0\n0\n3.528884e-01\n\n\n5\n5\n3.327743e-01\n\n\n16\n16\n3.299490e-01\n\n\n12\n12\n3.241979e-01\n\n\n1\n1\n2.645868e-01\n\n\n15\n15\n2.596958e-01\n\n\n6\n6\n2.145504e-01\n\n\n20\n20\n2.058069e-01\n\n\n8\n8\n1.759210e-01\n\n\n7\n7\n1.527652e-01\n\n\n13\n13\n1.498928e-01\n\n\n14\n14\n1.483843e-01\n\n\n19\n19\n1.376246e-01\n\n\n25\n25\n1.293166e-01\n\n\n2\n2\n1.258297e-01\n\n\n11\n11\n1.042786e-01\n\n\n10\n10\n1.036360e-01\n\n\n22\n22\n9.373707e-02\n\n\n24\n24\n9.150515e-02\n\n\n9\n9\n7.649236e-02\n\n\n17\n17\n2.529830e-02\n\n\n4\n4\n2.627584e-24\n\n\n18\n18\n2.627584e-24\n\n\n3\n3\n2.627584e-24\n\n\n21\n21\n2.627584e-24\n\n\n\n\n\n\n    \n\n  \n    \n\n  \n    \n  \n    \n\n  \n\n    \n  \n\n\n\n  \n\n\n    \n        \n    \n\n  \n\n\n\n  \n\n    \n  \n\n\n\n1.11.1 Hasil eigen vector\n\n# Mengambil tiga baris teratas dari DataFrame yang sudah diurutkan\ntop_three_eigenvector_preprocessing = eigenvector_df_sorted_preprocessing.head(3)\n# Mendapatkan indeks node dari tiga baris teratas\ntop_node_indices = top_three_eigenvector_preprocessing['Node']\n# Menampilkan kalimat yang sesuai dengan node-node teratas\nfor node_index in top_node_indices:\n    print(f\"Node {node_index}: {kalimat[node_index]}\")\n\nNode 23: Saya sangat senang di sini.\nNode 0: Chris Martin Singgung Kemacetan Jakarta\nTim Redaksi\nJAKARTA, KOMPAS.com - Band Coldplay ikut merasakan kemacetan Kota Jakarta saat pertama kali ke Indonesia.\nNode 5: Kalian tidak sendirian, saya juga merasakannya,\" kata Chris Martin."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "2  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  }
]